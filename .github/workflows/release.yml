name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        go mod download
        go mod verify

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build
      run: |
        export CGO_ENABLED=0
        go build -ldflags "-s -w -X main.Version=${{ steps.get_version.outputs.VERSION }}" \
                 -trimpath -o ./hashcolor \
           ./cmd/hashcolor/main.go

    - name: Package
      run: |
        mkdir -p "./build/hashcolor-${{ steps.get_version.outputs.VERSION }}"
        cp -av --target-directory="./build/hashcolor-${{ steps.get_version.outputs.VERSION }}" \
            ./examples ./hashcolor ./LICENSE ./README.md
        cd "./build/hashcolor-${{ steps.get_version.outputs.VERSION }}"
        find . -type f -exec sha256sum "{}" + > checksums.lst
        cd ..
        tar cvzf "./hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz" \
                "./hashcolor-${{ steps.get_version.outputs.VERSION }}"
        sha256sum "./hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz" > \
                  "./hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz.sha256"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Hashcolor ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Tarball
      id: upload-release-tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz
        asset_name: hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Release Digest
      id: upload-release-digest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz.sha256
        asset_name: hashcolor-${{ steps.get_version.outputs.VERSION }}-linux-x86_64.tar.gz.sha256
        asset_content_type: text/plain
